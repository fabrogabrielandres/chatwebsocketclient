// Generated by https://quicktype.io

import { AxiosError } from "axios";
import { chatApi } from "../api/chat.api";
import type { User } from "../components/Chat/Chat";
import type { AuthStatus } from "../interfaces/auth.interface";

export interface LoginResponse {
  user: User;
  authorized: AuthStatus;
}

export class AuthService {
  static login = async (
    username: string,
    password: string
  ): Promise<LoginResponse> => {
    try {
      const { data } = await chatApi.post<LoginResponse>("/auth", {
        username,
        password,
      });
      console.log(data);

      return data;
    } catch (error) {
      if (error instanceof AxiosError) {
        console.log(error.response?.data);
        throw new Error(error.response?.data);
      }

      console.log(error);
      throw new Error("Unable to login");
    }
  };

  static checkStatus = async (): Promise<LoginResponse> => {
    try {
      const { data } = await chatApi.get<LoginResponse>("/auth/check-status");

      return data;
    } catch (error) {
      console.log(error);
      throw new Error("UnAuthorized");
    }
  };
}
